# 기본 DB 설정 (로컬: H2 메모리, MySQL 문법 호환)
spring:
  datasource:
    # 기본값: H2 메모리 DB (MySQL 문법 호환을 위해 MODE=MySQL 옵션 추가)
    url: ${DB_URL:jdbc:h2:mem:testdb;MODE=MySQL}
    # 드라이버를 명시해 클래스패스 인식 실패를 방지 (문제의 핵심)
    driver-class-name: ${DB_DRIVER:org.h2.Driver}
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:}

  jpa:
    # 개발/로컬에선 스키마를 자동으로 맞춤 (운영은 보통 none/validate 권장)
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        # 콘솔에서 SQL을 보기 좋게
        format_sql: true
    # SQL 로그 출력이 필요하면 주석 해제
    # show-sql: true

  h2:
    console:
      # H2 웹 콘솔 사용 (http://localhost:8080/h2-console)
      enabled: true

# JWT 토큰 유효시간/시크릿 기본값 (운영은 꼭 환경변수로 교체)
jwt:
  secret: ${JWT_SECRET:ThisIsAVeryLongLocalDevSecretKey_AtLeast32Chars!}
  access-token-validity-ms: 900000          # 15분
  refresh-token-validity-ms: 1209600000     # 14일

# 메일 발송 계정 (환경변수로 주입)
mail:
  username: ${MAIL_USERNAME:}
  password: ${MAIL_PASSWORD:}

# Redis 기본 접속 정보(로컬 기준)
redis:
  host: ${REDIS_HOST:localhost}
  port: ${REDIS_PORT:6379}

# 앱 내부에서 쓰는 검증 링크 베이스 URL
app:
  verify:
    base-url: ${APP_VERIFY_BASE_URL:http://localhost:8080}

# Swagger / OpenAPI 설정 (스캔 범위 축소로 /v3/api-docs 500 방지)
springdoc:
  api-docs:
    # /v3/api-docs 활성화
    enabled: true
  swagger-ui:
    # /swagger-ui/index.html 활성화
    enabled: true
  # 컨트롤러가 있는 최상위 패키지만 스캔(불필요한 엔티티/프록시 스캔 방지)
  packages-to-scan: com.ll.P_A
  # API 경로만 문서화(필요 시 "/" 등으로 넓힐 수 있음)
  paths-to-match: /api/**